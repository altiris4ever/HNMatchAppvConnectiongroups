<File version="3.1">
  <FileID>1ea4f4b5-c314-42fa-9f86-821f32e6c289</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAKvJSURBVHhe7L0FmCXZed4/cRInsZM4Thx04kgm
WXFkO7Jj2bH9F9iSLFvSSqtlnt1ZHOaZhplmZmZmZmZmZqbbcJsZp9//99Xtnu2Z7d0d6p7b09/v
ed7n3ltw6tSpuud7z6lTVScEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
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
BPwfSDYRPUodTEcAAAAASUVORK5CYII=</Preview>
  <Form>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
/wGjEfavVVkAAA==</Form>
  <Code><![CDATA[
$MainForm_Load= {
	#TODO: Initialize Form Controls here
	$Global:TweakLine = @()
	$Lbl_BPlugins.Text = 'Enabled'
	$Lbl_ComOptions.Text = 'Isolated'
	$Lbl_ObjectIsolation.Text = ''
	$Lbl_Vfs.Text = 'false'
	Write-Host $global:wkApp
	
	$ThisApp = $global:wkApp + '\HnMatch_AppvConnectionGroups.exe' 
	$MainForm.Text += '   Fileversion:' + [System.Diagnostics.FileVersionInfo]::GetVersionInfo($ThisApp).FileVersion
	$listview1.Items.Clear()
	
	$subItem = @($Lbl_Vfs.Text; $Lbl_ComOptions.Text; $Lbl_BPlugins.Text; $Lbl_ObjectIsolation.Text)
	$Item = "Your Choices:"
	Add-ListViewItem -Items $item -ListView $listview1 -SubItems $SubItem
	Frm_VisChoise
}

$buttonCallChildForm_Click={
	#TODO: Place custom script here
	if((Show-ChildForm_psf) -eq 'OK')
	{
		
	}
}





#region Control Helper Functions
function Update-ListViewColumnSort
{
<#
	.SYNOPSIS
		Sort the ListView's item using the specified column.
	
	.DESCRIPTION
		Sort the ListView's item using the specified column.
		This function uses Add-Type to define a class that sort the items.
		The ListView's Tag property is used to keep track of the sorting.
	
	.PARAMETER ListView
		The ListView control to sort.
	
	.PARAMETER ColumnIndex
		The index of the column to use for sorting.
	
	.PARAMETER SortOrder
		The direction to sort the items. If not specified or set to None, it will toggle.
	
	.EXAMPLE
		Update-ListViewColumnSort -ListView $listview1 -ColumnIndex 0
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListView]
		$ListView,
		[Parameter(Mandatory = $true)]
		[int]
		$ColumnIndex,
		[System.Windows.Forms.SortOrder]
		$SortOrder = 'None'
	)
	
	if (($ListView.Items.Count -eq 0) -or ($ColumnIndex -lt 0) -or ($ColumnIndex -ge $ListView.Columns.Count))
	{
		return;
	}
	
	#region Define ListViewItemComparer
	try
	{
		[ListViewItemComparer] | Out-Null
	}
	catch
	{
		Add-Type -ReferencedAssemblies ('System.Windows.Forms') -TypeDefinition  @" 
	using System;
	using System.Windows.Forms;
	using System.Collections;
	public class ListViewItemComparer : IComparer
	{
	    public int column;
	    public SortOrder sortOrder;
	    public ListViewItemComparer()
	    {
	        column = 0;
			sortOrder = SortOrder.Ascending;
	    }
	    public ListViewItemComparer(int column, SortOrder sort)
	    {
	        this.column = column;
			sortOrder = sort;
	    }
	    public int Compare(object x, object y)
	    {
			if(column >= ((ListViewItem)x).SubItems.Count)
				return  sortOrder == SortOrder.Ascending ? -1 : 1;
		
			if(column >= ((ListViewItem)y).SubItems.Count)
				return sortOrder == SortOrder.Ascending ? 1 : -1;
		
			if(sortOrder == SortOrder.Ascending)
	        	return String.Compare(((ListViewItem)x).SubItems[column].Text, ((ListViewItem)y).SubItems[column].Text);
			else
				return String.Compare(((ListViewItem)y).SubItems[column].Text, ((ListViewItem)x).SubItems[column].Text);
	    }
	}
"@ | Out-Null
	}
	#endregion
	
	if ($ListView.Tag -is [ListViewItemComparer])
	{
		#Toggle the Sort Order
		if ($SortOrder -eq [System.Windows.Forms.SortOrder]::None)
		{
			if ($ListView.Tag.column -eq $ColumnIndex -and $ListView.Tag.sortOrder -eq 'Ascending')
			{
				$ListView.Tag.sortOrder = 'Descending'
			}
			else
			{
				$ListView.Tag.sortOrder = 'Ascending'
			}
		}
		else
		{
			$ListView.Tag.sortOrder = $SortOrder
		}
		
		$ListView.Tag.column = $ColumnIndex
		$ListView.Sort() #Sort the items
	}
	else
	{
		if ($SortOrder -eq [System.Windows.Forms.SortOrder]::None)
		{
			$SortOrder = [System.Windows.Forms.SortOrder]::Ascending
		}
		
		#Set to Tag because for some reason in PowerShell ListViewItemSorter prop returns null
		$ListView.Tag = New-Object ListViewItemComparer ($ColumnIndex, $SortOrder)
		$ListView.ListViewItemSorter = $ListView.Tag #Automatically sorts
	}
}


function Add-ListViewItem
{
<#
	.SYNOPSIS
		Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.

	.DESCRIPTION
		Adds the item(s) to the ListView and stores the object in the ListViewItem's Tag property.

	.PARAMETER ListView
		The ListView control to add the items to.

	.PARAMETER Items
		The object or objects you wish to load into the ListView's Items collection.
		
	.PARAMETER  ImageIndex
		The index of a predefined image in the ListView's ImageList.
	
	.PARAMETER  SubItems
		List of strings to add as Subitems.
	
	.PARAMETER Group
		The group to place the item(s) in.
	
	.PARAMETER Clear
		This switch clears the ListView's Items before adding the new item(s).
	
	.EXAMPLE
		Add-ListViewItem -ListView $listview1 -Items "Test" -Group $listview1.Groups[0] -ImageIndex 0 -SubItems "Installed"
#>
	
	Param( 
	[ValidateNotNull()]
	[Parameter(Mandatory=$true)]
	[System.Windows.Forms.ListView]$ListView,
	[ValidateNotNull()]
	[Parameter(Mandatory=$true)]
	$Items,
	[int]$ImageIndex = -1,
	[string[]]$SubItems,
	$Group,
	[switch]$Clear)
	
	if($Clear)
	{
		$ListView.Items.Clear();
    }
    
    $lvGroup = $null
    if ($Group -is [System.Windows.Forms.ListViewGroup])
    {
        $lvGroup = $Group
    }
    elseif ($Group -is [string])
    {
        #$lvGroup = $ListView.Group[$Group] # Case sensitive
        foreach ($groupItem in $ListView.Groups)
        {
            if ($groupItem.Name -eq $Group)
            {
                $lvGroup = $groupItem
                break
            }
        }
        
        if ($null -eq $lvGroup)
        {
            $lvGroup = $ListView.Groups.Add($Group, $Group)
        }
    }
    
	if($Items -is [Array])
	{
		$ListView.BeginUpdate()
		foreach ($item in $Items)
		{		
			$listitem  = $ListView.Items.Add($item.ToString(), $ImageIndex)
			#Store the object in the Tag
			$listitem.Tag = $item
			
			if($null -ne $SubItems)
			{
				$listitem.SubItems.AddRange($SubItems)
			}
			
			if($null -ne $lvGroup)
			{
				$listitem.Group = $lvGroup
			}
		}
		$ListView.EndUpdate()
	}
	else
	{
		#Add a new item to the ListView
		$listitem  = $ListView.Items.Add($Items.ToString(), $ImageIndex)
		#Store the object in the Tag
		$listitem.Tag = $Items
		
		if($null -ne $SubItems)
		{
			$listitem.SubItems.AddRange($SubItems)
		}
		
		if($null -ne $lvGroup)
		{
			$listitem.Group = $lvGroup
		}
	}
}


function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
		
	.PARAMETER ValueMember
		Indicates the property to use for the value of the control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$ListBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection] -or $Items -is [System.Collections.ICollection])
	{
		$ListBox.Items.AddRange($Items)
	}
	elseif ($Items -is [System.Collections.IEnumerable])
	{
		$ListBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$ListBox.Items.Add($obj)
		}
		$ListBox.EndUpdate()
	}
	else
	{
		$ListBox.Items.Add($Items)
	}
	
	$ListBox.DisplayMember = $DisplayMember
	$ListBox.ValueMember = $ValueMember
}
#endregion




Function Frm_FindSettings {
	Write-Host 'Starter Frm_Findsettings'
	#$Li = $listView1.ite
	$mSvar = ""
	$listview1.BeginUpdate()
	$listview1.Items.Clear()
	
	$subItem = @($Lbl_Vfs.Text; $Lbl_ComOptions.Text; $Lbl_BPlugins.Text; $Lbl_ObjectIsolation.Text)
	$Item = "Your Choices:"
	Add-ListViewItem -Items $item -ListView $listview1 -SubItems $SubItem
	#	return "*"
	
	If ($listbox1.Items.Count -gt 0) {
		Write-Host "Frm_Findsettings:Går gjennom lista"
		For ($i = 0; $i -lt $listbox1.Items.Count; $i++) {
			Get-XmlFromAppV -folder $Tbx_AppvFiles.Text -AppvPakke $listbox1.Items[$i]
			Write-Host $listbox1.Items[$i]
			$global:appvfile = $Tbx_AppvFiles.Text + "\AppxManifest.xml"
			[xml]$global:xml = Get-Content -Path $global:appvfile
			$subItem = @(''.'', '', '', '')
			
			$Item = [string]$listbox1.Items[$i]
			$subItem[0] = 'false'
			If ($global:xml.Package.Properties.FullVFSWriteMode -eq $true) { $subItem[0] = 'true' }
			
			$a = $global:xml.Package.ExtensionsConfiguration.COM.Mode
			Write-Host 'A:' $a
			
			Switch ($a) {
				'Off' { $subItem[1] = "ComOff" }
				'Integrated' { $subItem[1] += "Integrated" }
				Default { $subItem[1]= "Isolated" }
			}
			If ($a -eq 'integrated') {
				$mSvar = 'Integrated:'
				$b = 'IP,'
				If ($global:xml.Package.ExtensionsConfiguration.COM.IntegratedCOMAttributes.InProcessEnabled -eq 'false') { $b = '' }
				$c = 'OOP'
				If ($global:xml.Package.ExtensionsConfiguration.COM.IntegratedCOMAttributes.OutOfProcessEnabled -eq 'false') { $c = '' }
				$mSvar += $b + $c
				$subItem[1]= $mSvar
			}
			$a = $global:xml.Package.Extensions.Extension.BrowserPlugin.subcategory.count
			$b = "Disabled"
			If ($a -gt 0) { $b = "Enabled" }
			$subItem[2] = $b
			$subItem[3] = [String]$global:xml.Package.Extensions.Extension.objects.notisolate.Object.name
			
			#Write-Host $subItem
			Add-ListViewItem -Items $item -ListView $listview1 -SubItems $SubItem
		}
		$a = @()
		ForEach ($item In $listview1.Items) {
			$item.Checked = $true
			$a += $item.SubItems[0].text + '|' + $item.SubItems[1].text + '|' + $item.SubItems[2].text + '|' + $item.SubItems[3].text + '|' + $item.SubItems[4].text
		}
		$Filename = $Tbx_AppvFiles.Text + '\prop_' + (get-Date).ToShortDateString().Replace('.', '') + '_' + (Get-date).ToLongTimeString().Replace(':', '') + '.txt'
		Write-Host $Filename
		$a | Out-File -FilePath $filename -Encoding unicode
		Frm_VisChoise
		$listview1.EndUpdate()
		
		$a = @()
		#		ForEach ($item In $listview1.Items) {
		#			$a += $item.SubItems[0]+";" + $item.SubItems[1] + ";" + $item.SubItems[2] + ";" + $item.SubItems[3] + ";"
		#			$item.Checked = $true
		#		}
		#		$a| Out-File -FilePath ($Tbf_AppvFiles.Text +"\out.txt") -Encoding unicode
	}
}





$buttonExitConsoleToo_Click = {
	Stop-Process -Name 'HnMatch_AppvConnectionGroups'
}



Function Frm_ComCheck {
	$Grp_InteGratedComSettings.Visible = $false
	If ($Rbu_ComOFF.Checked) {
		$a = "0|6|23|24|25"
		$Lbl_ComOptions.Text = 'ComOff'
	}
	If ($Rbu_Integrated.Checked) {
		$a = "0|6|23|24|31|32"
		$Lbl_ComOptions.Text = 'Integrated:'
		If ($Chk_ComInProcess.Checked) {
			$a += "|33"
			$Lbl_ComOptions.Text +='IP,'
		} Else {
			$a += "|34"
		}
		If ($Chk_OutOfProcessComObjec.Checked) {
			$a += "|35"
			$Lbl_ComOptions.Text += 'OOP'
		} Else { $a += "|36" }
		$Grp_InteGratedComSettings.Visible = $true
	}
	If ($Rbu_Isolated.Checked) {
		$a = "0|6"
		$Lbl_ComOptions.Text = 'Isolated'
		}
	$Global:TweakLine = $a.split('|')
	
}

$Rbu_ComOFF_CheckedChanged = {
	#TODO: Place custom script here
	Frm_ComCheck
	Frm_VisChoise
}


$Rbu_Isolated_CheckedChanged={
	#TODO: Place custom script here
	Frm_ComCheck
	Frm_VisChoise
	
}

$Rbu_Integrated_CheckedChanged={
	#TODO: Place custom script here
	Frm_ComCheck
	Frm_VisChoise
}

$Chk_ComInProcess_CheckedChanged={
	#TODO: Place custom script here
	Frm_ComCheck
	Frm_VisChoise
}

$Chk_OutOfProcessComObjec_CheckedChanged = {
	#TODO: Place custom script here
	Frm_ComCheck
	Frm_VisChoise
}

$Btn_LagTweaktxt_Click = {
	$MainForm.Enabled=$false
	Frm_ComCheck
	Frm_VisChoise
	#TODO: Place custom script here
	$com = $global:wkApp + '\Tweakmal.txt'
	$tweakFile = $Tbx_AppvFiles.Text + '\Tweakappv.txt'
	$a = Get-Content -Path $com
	$c = @()
	#Write-Host $global:TweakLine
	$global:TweakLine | ForEach-Object{
		
		$c += $a[$_]
	}
	#$c | ForEach-Object{ Write-Host $_ }
	Out-File -FilePath $tweakFile -InputObject $c -Encoding unicode
	$a = $global:wkApp + '\Tweakappv.exe'
	$arg1 = '/batchfileupdate'
	Write-Host ''
	Write-Host '-- Com-options ----------------------------------------------'
	ForEach ($item In $listview1.Items) {
		If ($item.Checked) {
			If ($item.SubItems[2].Text -ne $Lbl_ComOptions.Text) {
				Write-Host $item.Text':' $item.SubItems[2].Text $Lbl_ComOptions.Text
				$arg2 = $Tbx_AppvFiles.Text + '\' + $item.Text
				$q = & $a $arg1 $arg2 $tweakFile
				
				Wait-Process -Name "TweakAppv.exe*32"
				#$q | ForEach-Object { Write-Host $_ }
			}
		}
		#		ForEach ($i In $item.SubItems) {
		#			Write-Host $i.Text
		#		}
	}
	Write-Host ''
	Write-Host '-- Excludeobjects---------------------------------------------'
	
	$arg1 = '/update'
	$arg5 = $global:wkApp + '\ExcludeAllObjectsFromIsolation_Delete.xsl'
	$arg6 = $global:wkApp + '\ExcludeAllObjectsFromIsolation_Delete.xsl'
	If ($Chk_ExcludeAllObjectsIsolation.Checked) {
		$arg5 = $global:wkApp + '\ExcludeAllObjectsFromIsolation.xsl'
	}
	ForEach ($item In $listview1.Items) {
		If ($item.Checked) {
			If ($item.SubItems[4].Text -ne $Lbl_ObjectIsolation.Text) {
				Write-Host $item.Text':' $item.SubItems[4].Text   $Lbl_ObjectIsolation.Text
				$arg2 = $Tbx_AppvFiles.Text + '\' + $item.Text
				$arg3 = "/TransformManifest"
				$arg4 = "AppxManifest.xml"
				$q = & $a $arg1 $arg2 $arg3 $arg4 $arg6
				Wait-Process -Name "TweakAppv.exe*32"
				$q = & $a $arg1 $arg2 $arg3 $arg4 $arg5
				Wait-Process -Name "TweakAppv.exe*32"
			}
		}
	}
	Write-Host ''
	Write-Host '-- Browser-Plugin----------------------------------------------'
	$arg1 = '/update'
	$arg5 = $global:wkApp + '\BrowserPlugin_Disable.xsl'
	If ($Chk_DiableBrowserPlugin.Checked) {
		ForEach ($item In $listview1.Items) {
			If ($item.Checked) {
				If ($item.SubItems[3].Text -ne $Lbl_BPlugins.Text) {
					Write-Host $item.Text':' $item.SubItems[3].Text   $Lbl_BPlugins.Text
					$arg2 = $Tbx_AppvFiles.Text + '\' + $item.Text
					$arg3 = "/TransformManifest"
					$arg4 = "AppxManifest.xml"
					$q = & $a $arg1 $arg2 $arg3 $arg4 $arg5
					Wait-Process -Name "TweakAppv.exe*32"
				}
			}
		}
	}
	
	Write-Host ''
	Write-Host '-- VFS----------------------------------------------'
	$arg1 = '/update'
	$arg5 = $global:wkApp + '\VFS.xsl'
	$arg6 = 'false'
	
	If ($Chk_EnableFullVFSWriteAc.Checked) { $arg6 = 'true' }
	ForEach ($item In $listview1.Items) {
		If ($item.Checked) {
			If ($item.SubItems[1].Text -ne $Lbl_Vfs.Text) {
				Write-Host $item.Text':' $item.SubItems[1].Text $Lbl_Vfs.Text
				$arg2 = $Tbx_AppvFiles.Text + '\' + $item.Text
				$arg3 = "/TransformManifest"
				$arg4 = "AppxManifest.xml"
				$q = & $a $arg1 $arg2 $arg3 $arg4 $arg5 "-VFS" $arg6
				Write-Host $a $arg1 $arg2 $arg3 $arg4 $arg5 "-VFS" $arg6
				Wait-Process -Name "TweakAppv.exe*32"
			}
		}
		
	}
	
	Write-Host ''
	Write-Host 'Start oppdater lista----------------------------------------------------------------------'
	Frm_FindSettings
	Write-Host 'Ferdig'
	$MainForm.Enabled = $true
}


Function Frm_VisChoise {
	Param (
		[array]$BColor = @($Lbl_Color.BackColor; $Lbl_Color1.ForeColor; $Lbl_Color1.BackColor; $Lbl_Color.ForeColor),
		[array]$FColor = @($Lbl_Color.ForeColor; $Lbl_Color1.BackColor; $Lbl_Color1.ForeColor; $Lbl_Color.BackColor)
	)
	$listView1.Items[0].Selected = $true	
	$Li = $listView1.Items[0]
#	$subItem = @($Lbl_Vfs.Text; $Lbl_ComOptions.Text; $Lbl_BPlugins.Text; $Lbl_ObjectIsolation.Text)
#	$Item = "Your Choices:"
	$Li.SubItems[1].Text = $Lbl_Vfs.Text
	$Li.SubItems[2].Text = $Lbl_ComOptions.Text
	$Li.SubItems[3].Text = $Lbl_BPlugins.Text
	$Li.SubItems[4].Text = $Lbl_ObjectIsolation.Text
	$Li.Checked=$false
#	$Li.SubItems[1].ForeColor = $Fcolor[0]
#	$Li.SubItems[1].BackColor = $BColor[0]
#	$Li.SubItems[2].ForeColor = $Fcolor[1]
#	$Li.SubItems[2].BackColor = $BColor[1]
#	$Li.SubItems[3].ForeColor = $Fcolor[2]
#	$Li.SubItems[3].BackColor = $BColor[2]
#	
#	$Li.SubItems[4].ForeColor = $Fcolor[3]
#	$Li.SubItems[4].BackColor = $BColor[3]
	
	$Li.BackColor = $bcolor[0]
	$Li.ForeColor = $fColor[0]
	$Li.Font = $Lbl_Color.Font
	$listview1.BeginUpdate()
	$ListView1.AutoResizeColumns(1) # base width on content length
	$listview1.EndUpdate()
}



$Chk_DiableBrowserPlugin_CheckedChanged={
	#TODO: Place custom script here
	$Lbl_BPlugins.Text = 'Enabled'
	If ($Chk_DiableBrowserPlugin.Checked) { $Lbl_BPlugins.Text = 'Disabled' }
  Frm_VisChoise
#	Add-ListViewItem -Items $item -ListView $listview1 -SubItems $SubItem	
}

$Chk_EnableFullVFSWriteAc_CheckedChanged={
	#TODO: Place custom script here
	$Lbl_Vfs.text = 'false'
	if ($Chk_EnableFullVFSWriteAc.Checked){$Lbl_Vfs.text = 'true'}
	Frm_VisChoise
}

$Chk_ExcludeAllObjectsIsolation_CheckedChanged= {
	#TODO: Place custom script here
	$Lbl_ObjectIsolation.Text = ""
	If ($Chk_ExcludeAllObjectsIsolation.Checked) { $Lbl_ObjectIsolation.Text = '*' }
	Frm_VisChoise
}

$Btn_BackColor_Click={
	#TODO: Place custom script here
	$colordialog1.Color = $Lbl_Color.BackColor
	If ($colordialog1.ShowDialog() -eq 'OK') {
		$Lbl_Color.BackColor = $colordialog1.Color
	}
}

$Btn_Font_Click={
	#TODO: Place custom script here
	$fontdialog1.ShowColor = $true
	$fontdialog1.ShowEffects = $true
	$fontdialog1.Font = $Lbl_Color.Font
	$fontdialog1.Color = $Lbl_Color.ForeColor
	If ($fontdialog1.ShowDialog() -eq 'OK') {
		$Lbl_Color.Font = $fontdialog1.Font
		$Lbl_Color.ForeColor = $fontdialog1.Color
		Frm_VisChoise
	}
	
}

$Btn_ForeColor_Click = {
	$colordialog1.Color = $Lbl_Color.ForeColor
	If ($colordialog1.ShowDialog() -eq 'OK') {
		$Lbl_Color.ForeColor = $colordialog1.Color
		Frm_VisChoise
	}
}

$Bbr_Appvfiles_Click2= {
	If ($openfiledialog3.ShowDialog() -eq 'OK') {
		$MainForm.Enabled = $false
		$Tbx_AppvFiles.Text = $openfiledialog3.FileName
		$appvfiles = @()
		$b = $Tbx_AppvFiles.Text.Split('\')
		If ($b[$b.Count - 1].EndsWith('.appv')) {
			$c = $Tbx_AppvFiles.Text.Substring(0, $Tbx_AppvFiles.Text.Length - ($b[$b.Count - 1].Length) - 1)
			$Tbx_AppvFiles.Text = $c
			$a = Get-ChildItem -path $c -Filter "*.appv"
			If ($a -ne $null) { $appvFiles += $a }
			Update-ListBox -ListBox $listbox1 -Items $appvFiles
			Frm_FindSettings
			$MainForm.Enabled = $true
		}
	}
}
$openfiledialog3_FileOk=[System.ComponentModel.CancelEventHandler]{
#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
	#TODO: Place custom script here
	
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>